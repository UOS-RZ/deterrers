# Dockerfile

FROM python:3.10-slim-bullseye


# install cron
RUN apt-get update
RUN apt-get -y install cron curl

# install supercronic
# Latest releases available at https://github.com/aptible/supercronic/releases
ENV SUPERCRONIC_URL=https://github.com/aptible/supercronic/releases/download/v0.2.23/supercronic-linux-amd64 \
    SUPERCRONIC=supercronic-linux-amd64 \
    SUPERCRONIC_SHA1SUM=dbed853c06aba2c611bbb1955b2c1667b51dcb0a
RUN curl -fsSLO "$SUPERCRONIC_URL" \
 && echo "${SUPERCRONIC_SHA1SUM}  ${SUPERCRONIC}" | sha1sum -c - \
 && chmod +x "$SUPERCRONIC" \
 && mv "$SUPERCRONIC" "/usr/local/bin/${SUPERCRONIC}" \
 && ln -s "/usr/local/bin/${SUPERCRONIC}" /usr/local/bin/supercronic

ENV MICRO_SERVICE=/home/app/microservice
RUN mkdir -p $MICRO_SERVICE
RUN mkdir -p $MICRO_SERVICE/static

# where the code lives
WORKDIR $MICRO_SERVICE

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install dependencies
COPY ./requirements.txt $MICRO_SERVICE
RUN pip install --upgrade pip
RUN pip install -r requirements.txt
COPY ./entrypoint.sh $MICRO_SERVICE
RUN chmod +x $MICRO_SERVICE/entrypoint.sh

# copy project
COPY . $MICRO_SERVICE

# create APP_USER, make APP_USER owner of the app directory and switch to APP_USER
ENV APP_USER=deterrers_user
# RUN addgroup -S $APP_USER && adduser -S $APP_USER -G $APP_USER
RUN addgroup $APP_USER && adduser $APP_USER --ingroup $APP_USER
RUN chown -R ${APP_USER}:${APP_USER} ${MICRO_SERVICE}
USER ${APP_USER}:${APP_USER}

# schedule session clearing daily
RUN echo '0 0 * * * python ${MICRO_SERVICE}/manage.py clearsessions' > ./my_crontab
# schedule commit task every 15 minutes
RUN echo '*/15 * * * * python ${MICRO_SERVICE}/manage.py commit_to_perimeter_fw' >> ./my_crontab
# schedule Palo Alto FW synchronisation twice a day
RUN echo '0 6,18 * * * python ${MICRO_SERVICE}/manage.py sync_fw --sync' >> ./my_crontab
# schedule vulnerability scanner synchronisation once per day
RUN echo '0 3 * * * python ${MICRO_SERVICE}/manage.py sync_scanner --sync' >> ./my_crontab

# add scanner's SSH fingerprint to known hosts
RUN python ${MICRO_SERVICE}/manage.py add_ssh_fingerprint


CMD supercronic ./my_crontab