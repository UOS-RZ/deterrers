upstream deterrers-application {
    server web:8000;
}

# generated 2023-02-08, Mozilla Guideline v5.6, nginx 1.17.7, OpenSSL 1.1.1k, intermediate configuration
# https://ssl-config.mozilla.org/#server=nginx&version=1.17.7&config=intermediate&openssl=1.1.1k&guideline=5.6
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    location / {
        return 301 https://$host$request_uri;
    }
}

# redirect "deterrers.rz.uos.de" to "deterrers.rz.uni-osnabrueck.de"
server {
    listen 443;
    listen [::]:443;

    server_name deterrers.rz.uos.de;

    location / {
        return 301 https://deterrers.rz.uni-osnabrueck.de$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate /etc/ssl/certs/deterrers_rz_uni-osnabrueck_de.pem;
    ssl_certificate_key /etc/ssl/private/deterrers-server-key.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
    ssl_dhparam /etc/nginx/dhparam4096.pem;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # Clickjacking
    add_header X-Frame-Options DENY;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/nginx/deterrers_rz_uni-osnabrueck_de_interm.cer;

    # replace with the IP address of your resolver
    resolver 131.173.245.1;


    server_name deterrers.rz.uni-osnabrueck.de;

    location / {
        # connection to django app is HTTP
        proxy_pass http://deterrers-application;
        # set Host header so Django knows the true origin of request
        proxy_set_header Host $host;
        # set the original IP and protocol as custo headers
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
    location /static/ {
        alias /home/app/microservice/static/;
    }
}

# default HTTPS server that returns 444 for all unfamilar server names
server {
    listen 443 default_server;
    listen [::]:443 default_server;

    return 444;
}